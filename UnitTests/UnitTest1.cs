namespace UnitTests;

public class Tests
{
    [SetUp]
    public void Setup()
    {
    }

    [Test]
    public void UsualClassTest()
    {
        var code = @"
      namespace MyCode
      {
        public class MyClass
        {
          public int Multiply(int x, int y)
          {
            return x * y;
          }

          public int Sum( int x, int y)
          {
            return x + y;
          }

          public void DoNothing()          
          {}
        }
      }
      ";

        var testGen = new TestGenerator.Core.NUnitTestgenerator();
        var testCode = testGen.MakeTests(code);
        Assert.IsTrue( testCode[0].Contains( "using System;" ) );
        Assert.IsTrue( testCode[0].Contains( "using System.Collections.Generic;" ) );
        Assert.IsTrue( testCode[0].Contains( "using System.Linq;" ) );
        Assert.IsTrue( testCode[0].Contains( "using System.Text;" ) );
        Assert.IsTrue( testCode[0].Contains( "using NUnit.Framework;" ) );
        Assert.IsTrue( testCode[0].Contains( "using MyCode;" ) );
        
        Assert.IsTrue( testCode[0].Contains( "namespace MyCode.Test" ) );
        Assert.IsTrue( testCode[0].Contains( "public class MyClassTests" ) );
        Assert.IsTrue( testCode[0].Contains( "public void MultiplyTest()" ) );
        Assert.IsTrue( testCode[0].Contains( "public void SumTest()" ) );
        Assert.IsTrue( testCode[0].Contains( "public void DoNothingTest()" ) );
        Assert.IsTrue( testCode[0].Contains( "Assert.Fail(\"autogenerated\");" ) );

    }
    
    [Test]
    public void TwoClassesTest()
    {
      var code = @"
      namespace MyCode
      {
        public class MyClass
        {
          public int Multiply(int x, int y)
          {
            return x * y;
          }

          public int Sum( int x, int y)
          {
            return x + y;
          }

          public void DoNothing()          
          {}
        }

        namespace Inner
        {
           public class MyClass
           {
              public int Multiply(int x, int y)
              {
                return x * y;
              }

              public int Sum( int x, int y)
              {
                return x + y;
              }

              public void DoNothing()          
              {}
           }
        }

      }
      ";

      var testGen = new TestGenerator.Core.NUnitTestgenerator();
      var testCode = testGen.MakeTests(code);
      Assert.IsTrue( testCode[0].Contains( "using System;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Collections.Generic;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Linq;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Text;" ) );
      Assert.IsTrue( testCode[0].Contains( "using NUnit.Framework;" ) );
      Assert.IsTrue( testCode[0].Contains( "using MyCode;" ) );
        
      Assert.IsTrue( testCode[0].Contains( "namespace MyCode.Test" ) );
      Assert.IsTrue( testCode[0].Contains( "public class MyClassTests" ) );
      Assert.IsTrue( testCode[0].Contains( "public void MultiplyTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "public void SumTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "public void DoNothingTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "Assert.Fail(\"autogenerated\");" ) );
      
      Assert.IsTrue( testCode[1].Contains( "using System;" ) );
      Assert.IsTrue( testCode[1].Contains( "using System.Collections.Generic;" ) );
      Assert.IsTrue( testCode[1].Contains( "using System.Linq;" ) );
      Assert.IsTrue( testCode[1].Contains( "using System.Text;" ) );
      Assert.IsTrue( testCode[1].Contains( "using NUnit.Framework;" ) );
      Assert.IsTrue( testCode[1].Contains( "using MyCode.Inner;" ) );
        
      Assert.IsTrue( testCode[1].Contains( "namespace MyCode.Inner.Test" ) );
      Assert.IsTrue( testCode[1].Contains( "public class MyClassTests" ) );
      Assert.IsTrue( testCode[1].Contains( "public void MultiplyTest()" ) );
      Assert.IsTrue( testCode[1].Contains( "public void SumTest()" ) );
      Assert.IsTrue( testCode[1].Contains( "public void DoNothingTest()" ) );
      Assert.IsTrue( testCode[1].Contains( "Assert.Fail(\"autogenerated\");" ) );

    }
    
    
    [Test]
    public void ClassWithOverloadedMethodTest()
    {
      var code = @"
      namespace MyCode
      {
        public class MyClass
        {
          public int Multiply(int x, int y)
          {
            return x * y;
          }

          public double Multiply(double x, double y)
          {
            return x * y;
          }

          public int Sum( int x, int y)
          {
            return x + y;
          }

          public void DoNothing()          
          {}
        }
      }
      ";

      var testGen = new TestGenerator.Core.NUnitTestgenerator();
      var testCode = testGen.MakeTests(code);
      Assert.IsTrue( testCode[0].Contains( "using System;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Collections.Generic;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Linq;" ) );
      Assert.IsTrue( testCode[0].Contains( "using System.Text;" ) );
      Assert.IsTrue( testCode[0].Contains( "using NUnit.Framework;" ) );
      Assert.IsTrue( testCode[0].Contains( "using MyCode;" ) );
        
      Assert.IsTrue( testCode[0].Contains( "namespace MyCode.Test" ) );
      Assert.IsTrue( testCode[0].Contains( "public class MyClassTests" ) );
      Assert.IsTrue( testCode[0].Contains( "public void MultiplyTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "public void Multiply1Test()" ) );
      Assert.IsTrue( testCode[0].Contains( "public void SumTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "public void DoNothingTest()" ) );
      Assert.IsTrue( testCode[0].Contains( "Assert.Fail(\"autogenerated\");" ) );

    }
    
    
    
}